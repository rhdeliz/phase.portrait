#' @name normalize_values
#' #' @title Normalize Values
#' This function normalizes a value column in a data frame using either max or min-max normalization.
#' @param df A data frame with a `value` column to be normalized.
#' @param normalization A character string specifying the normalization method.
#'   Options are:
#'   - `"max"` (default): Scales `value` by dividing by the maximum absolute value.
#'   - `"min-max"`: Scales `value` to a 0-1 range by subtracting the minimum and dividing by the maximum.
#' @return A data frame with the normalized `value` column.
#' @examples
#' df <- data.frame(value = c(1, 2, 3, 4, 5), variable = "var1")
#' normalize_values(df, normalization = "min-max")
#'
library(dplyr)
library(data.table)
library(parallel)
normalize_values <- function(df, normalization = "max", save = FALSE) {
  # Check for valid normalization method
  if (!normalization %in% c("max", "min-max")) {
    stop("Normalization method does not exist. Choose either 'max' or 'min-max'.")
  }

  # Normalize values based on the chosen method
  df <- df %>% group_by(variable)

  if (normalization == "max") {
    df <- df %>% mutate(value = value / max(abs(value), na.rm = TRUE))
  } else if (normalization == "min-max") {
    df <- df %>% mutate(value = (value - min(value, na.rm = TRUE)) / max(value, na.rm = TRUE))
  }
  df <- as.data.table(df)

  if (save) {
    fwrite(
      df,
      paste0("normalized_values_method_", normalization, ".csv")
    )
  }
  return(df)
}
